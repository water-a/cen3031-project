{"version":3,"sources":["img/logo.png","img/profile.jpg","pages/OrderForm/components/UploadBox/UploadBox.js","pages/OrderForm/components/UploadBox/index.js","components/SelectionBox/index.js","components/SelectionBox/SelectionBox.js","pages/OrderForm/components/MaterialSelection.js","pages/OrderForm/components/SizeSelection.js","pages/OrderForm/components/PaypalButton.js","components/Carousel/index.js","components/Carousel/Carousel.js","components/Estimate.js","pages/OrderForm/OrderForm.js","pages/OrderForm/index.js","pages/FAQ/FAQ.js","pages/FAQ/index.js","pages/Contact/index.js","pages/Contact/Contact.js","pages/About/About.js","pages/About/index.js","pages/Success/index.js","pages/Success/Success.js","routes/OrdersRouter/OrdersRouter.js","routes/OrdersRouter/index.js","routes/AppRouter.js","index.js"],"names":["module","exports","__webpack_require__","p","UploadBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onClick","refs","upload","click","_onChange","event","stopPropagation","preventDefault","file","target","files","reader","readAsDataURL","setGlobalState","image","FileReader","onload","preview","result","content","react_default","a","createElement","Fragment","index_es","icon","size","globalState","className","alt","name","src","onClick","type","ref","onChange","Component","withGlobalState","SelectionBox","_select","_ref","asyncToGenerator","regenerator_default","mark","_callee","item","index","wrap","_context","prev","next","_onSelect","t0","sent","setState","stop","_x","_x2","apply","arguments","state","items","_renderItem","render","onSelect","_this2","map","key","bind","classNames","MaterialSelection","_renderMaterialSelection","costPerArea","_onSelectMaterial","abrupt","Promise","resolve","reject","material","custom","materials","slice","components_SelectionBox","SizeSelection","_renderSizeSelection","sizes","length","height","width","toLocaleString","_onSelectSize","swal","text","element","attributes","then","prevGlobalState","push","PaypalButton","_submitOrder","process","orderData","FormData","append","fetch","method","body","response","json","status","window","location","href","redirectUrl","message","catch","CompoundButton","style","float","primary","secondaryText","Spinner","SpinnerSize","large","Carousel","_renderProgressSteps","getClassName","classname","step","classes","getContent","slide","slides","classnames","React","isValidElement","canVisit","_canVisit","cursor","_set","assertThisInitialized","undefined","steps","current","preNext","Math","min","max","_back","_next","actions","enabled","disabled","Estimate","getArea","getEstimate","nextProps","CarouselWrapper","options","label","ariaLive","components_Carousel","components_UploadBox","components_MaterialSelection","components_SizeSelection","textAlign","components_Estimate","components_PaypalButton","OrderForm","breaks","require","FAQ","remark","use","remark2react","processSync","faq","contents","Contact","_submit","headers","Content-Type","JSON","stringify","_clearInputs","email","orderId","issue","_handleInput","value","prevState","objectSpread","defineProperty","onSubmit","TextField","required","multiline","autoAdjustHeight","Button","buttonType","ButtonType","allowDisabledFocus","About","profile","about","Success","load","shippingAddress","contact","url","URL","paymentId","searchParams","get","payerId","firstName","lastName","line1","line2","city","country","postal","fontSize","OrdersRouter","react_router_dom","to","logo","activeClassName","exact","react_router","path","match","component","concat","initialState","library","add","faPlus","faFileUpload","faStickyNote","faRulerCombined","faDollarSign","AppRouter","react_globally","ReactDOM","routes_AppRouter","document","getElementById"],"mappings":"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","file":"static/js/main.dfa0746e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dac70980.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.a0187d89.jpg\";","import React, { Component } from 'react';\nimport './UploadBox.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withGlobalState } from 'react-globally'\n\nclass UploadBox extends Component {\n    constructor(props){\n        super(props);\n        this.reader = new FileReader();\n        this.reader.onload = (event) => {\n            this.props.setGlobalState({\n                preview: event.target.result\n            });\n        }\n    }\n    _onClick = () => {\n        this.refs.upload.click();\n    }\n    _onChange = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        let file = event.target.files[0];\n        if (file){\n            this.reader.readAsDataURL(file);\n            this.props.setGlobalState(() => ({\n                image: file\n            }));\n        }\n    }\n    render() {\n        let content = (\n            <>\n                <FontAwesomeIcon icon=\"plus\" size=\"6x\" />\n                Drop files here or click to upload\n            </>\n        );\n        if (this.props.globalState.preview){\n            content = (\n                <div className=\"Preview\">\n                    <img alt={this.props.globalState.image.name} src={this.props.globalState.preview} />\n                    <span>{this.props.globalState.image.name}</span>\n                </div>\n            );\n        }\n        return (\n            <div className=\"UploadBox\">\n                <div className=\"Dropzone\" onClick={this._onClick}>\n                    <div className=\"Message\">\n                        <input type=\"file\" ref=\"upload\" onChange={this._onChange} />\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withGlobalState(UploadBox);\n","import UploadBox from './UploadBox';\n\nexport default UploadBox;","import SelectionBox from './SelectionBox';\n\nexport default SelectionBox;","import React, { Component } from 'react';\nimport classNames from 'classnames/bind';\nimport './SelectionBox.css';\n\nclass SelectionBox extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            index: this.props.index,\n            items: this.props.items\n        };\n        this._renderItem = this.props.render;\n        this._onSelect = this.props.onSelect;\n    }\n    _select = async (item, index) => {\n        if (this._onSelect ? await this._onSelect(item, index) : true){\n            this.setState({\n                index: index\n            });\n        }\n    }\n    render(){\n        return (\n            <div className=\"SelectionBox\">\n                {this.state.items.map((item, index) => (\n                    <div key={index} onClick={this._select.bind(this._select, item, index)} className={classNames(['Selection', index === this.state.index && 'Active'])}>\n                        {this._renderItem(item, index)}\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default SelectionBox;\n","import React, { Component } from 'react';\nimport SelectionBox from '../../../components/SelectionBox';\nimport { withGlobalState } from 'react-globally';\n// import swal from 'sweetalert';\n\nclass MaterialSelection extends Component {\n    constructor(props){\n        super(props);\n        let materials = this.props.materials.slice(0);\n        // materials.push({\n        //     name: 'Custom'\n        // });\n        this.state = {\n            materials: materials\n        }; \n    }\n    _renderMaterialSelection = (item, index) => {\n        // if (index === this.state.materials.length - 1){\n        //     return (\n        //         <>\n        //             <b>{item.name}</b>\n        //             {this.props.globalState.material.custom && (<>{this.props.globalState.material.custom}</>)}\n        //         </>\n        //     );\n        // }\n        return (\n            <>\n                <b>{item.name}</b>\n                <span>${item.costPerArea}/in<sup>2</sup></span>\n            </>\n        );\n    }\n    _onSelectMaterial = async (item, index) => {\n        return new Promise((resolve, reject) => {\n            // if (index === this.state.materials.length - 1){\n            //     swal({\n            //         text: 'What material would you like to use?',\n            //         content: \"input\"\n            //     }).then(material => {\n            //         if (material){\n            //             this.props.setGlobalState(() => ({\n            //                 material: {\n            //                     index: index,\n            //                     item: material,\n            //                     custom: material\n            //                 }\n            //             }));\n            //             resolve(true);\n            //         } else {\n            //             resolve(false);\n            //         }\n            //     })\n            // } else {\n                this.props.setGlobalState(() => ({\n                    material: {\n                        index: index,\n                        item: item,\n                        custom: null\n                    }\n                }));\n                resolve(true);\n            // }\n        });\n    }\n    render() {\n        return (\n            <SelectionBox\n                key=\"Material\" \n                items={this.state.materials} \n                render={this._renderMaterialSelection} \n                index={this.props.globalState.material.index}\n                onSelect={this._onSelectMaterial}\n            />\n        );\n    }\n}\n\nexport default withGlobalState(MaterialSelection);","import React, { Component } from 'react';\nimport SelectionBox from '../../../components/SelectionBox';\nimport { withGlobalState } from 'react-globally';\nimport swal from 'sweetalert';\n\nclass SizeSelection extends Component {\n    constructor(props){\n        super(props);\n        let sizes = this.props.sizes.slice(0);\n        sizes.push({\n            name: 'Custom'\n        });\n        this.state = {\n            sizes: sizes\n        }; \n    }\n    _renderSizeSelection = (item, index) => {\n        if (index === this.state.sizes.length - 1 && this.props.globalState.size.custom){\n            item.height = this.props.globalState.size.custom.height;\n            item.width = this.props.globalState.size.custom.width;\n        }\n        return (\n            <>\n                <b>{item.height && item.width ? item.height + '\\'x' + item.width + '\\'' : item.name}</b>\n                {item.height && item.width && '$' + (item.height * item.width * this.props.globalState.material.item.costPerArea).toLocaleString()}\n            </>\n        );\n    }\n    _onSelectSize = (item, index) => {\n        return new Promise((resolve, reject) => {\n            if (index === this.state.sizes.length - 1){\n                swal({\n                    text: 'What height would you like to use?',\n                    content: {\n                        element: \"input\",\n                        attributes: {\n                            type: \"number\"\n                        }\n                    }\n                }).then(height => {\n                    if (height){\n                        swal({\n                            text: 'What width would you like to use?',\n                            content: {\n                                element: \"input\",\n                                attributes: {\n                                    type: \"number\"\n                                }\n                            }\n                        }).then(width => {\n                            if (width){\n                                let size = {\n                                    height: height,\n                                    width: width\n                                };\n                                this.props.setGlobalState(prevGlobalState => ({\n                                    size: {\n                                        index: index,\n                                        item: size,\n                                        custom: size\n                                    }\n                                }));\n                                resolve(true);\n                            } else {\n                                resolve(false);\n                            }\n                        });\n                    } else {\n                        resolve(false);\n                    }\n                });\n            } else {\n                this.props.setGlobalState(() => ({\n                    size: {\n                        index: index,\n                        item: item,\n                        custom: null\n                    }\n                }));\n                resolve(true);\n            }\n        });\n    }\n    render() {\n        return (\n            <SelectionBox \n                key=\"Size\"\n                items={this.state.sizes} \n                render={this._renderSizeSelection} \n                index={this.props.globalState.size.index}\n                onSelect={this._onSelectSize}\n            />\n        );\n    }\n}\n\nexport default withGlobalState(SizeSelection);","import React, { Component } from 'react';\nimport { CompoundButton } from 'office-ui-fabric-react/lib/Button';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport swal from 'sweetalert';\nimport { withGlobalState } from 'react-globally';\n\nclass PaypalButton extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            process: false\n        }\n    }\n    _submitOrder = () => {\n        if (!this.state.process){\n            this.setState({\n                process: true\n            });\n            let orderData = new FormData();\n            orderData.append('material', this.props.globalState.material.item.name);\n            orderData.append('height', this.props.globalState.size.item.height);\n            orderData.append('width', this.props.globalState.size.item.width);\n            orderData.append('image', this.props.globalState.image);\n            fetch('/api/orders', {\n                method: 'POST',\n                body: orderData\n            })\n            .then(response => response.json())\n            .then(json => {\n                if (json.status === 'success'){\n                    window.location.href = json.response.redirectUrl;\n                } else {\n                    swal('Oops...something happened', json.message, 'error');\n                    this.setState({\n                        process: false\n                    });\n                }\n            }).catch(() => {\n                swal('Oops...something happened', 'Could not reach server', 'error');\n                this.setState({\n                    process: false\n                });\n            });\n        }\n    }\n    render(){\n        return (\n            <CompoundButton \n                onClick={this._submitOrder} \n                style={{float: \"right\", width: \"175px\"}} \n                primary={true} \n                secondaryText={this.state.process ? '' : \"Buy your print via PayPal\"}\n            >\n                {this.state.process ? <Spinner size={SpinnerSize.large} /> : 'Purchase'}\n            </CompoundButton>\n        );\n    }\n}\n\nexport default withGlobalState(PaypalButton);","import Carousel from './Carousel';\n\nexport default Carousel;","import React, { Component } from 'react';\nimport { CompoundButton } from 'office-ui-fabric-react/lib/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames/bind';\nimport './Carousel.css';\n\nclass Carousel extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            index: 0,\n            slides: this.props.slides\n        };\n    }\n    _renderProgressSteps = () => {\n        let getClassName = (classname, step) => {\n            let classes = [classname];\n            let index = step - 1;\n            if (index <= this.state.index){\n                classes.push('Completed');\n            }\n            if (index === this.state.index){\n                classes.push('Active');\n            }\n            return classNames(classes);\n        }\n        let getContent = (step) => {\n            let index = step - 1;\n            let slide = this.state.slides[index];\n            let classnames = getClassName('Step', step);\n            let content = step;\n            if (!React.isValidElement(slide)){\n                content = (<>\n                    <span className=\"Name\">{slide.name}</span>\n                    <FontAwesomeIcon icon={slide.icon} />\n                </>)\n            }\n            let canVisit = this._canVisit(index);\n            return (\n                <li \n                    style={{cursor: canVisit ? 'pointer' : 'index'}} \n                    onClick={canVisit ? this._set.bind(this, index) : undefined} \n                    key={step} \n                    className={classnames}\n                >\n                    {content}\n                </li>\n            );\n        }\n        let steps = [getContent(1)];\n        for (let step = 2; step <= this.state.slides.length; step++){\n            steps.push(<li key={step + 'l'} className={getClassName('Stepline', step)} />);\n            steps.push(getContent(step));\n        }\n        return steps;\n    }\n    _canVisit = (index) => {\n        if (index === 0){\n            return true;\n        }\n        let current = this.props.slides[index - 1];\n        return React.isValidElement(current) || (current.preNext && current.preNext());\n    }\n    _set = (index) => {\n        this.setState({\n            index: Math.min(Math.max(index, 0), this.props.slides.length - 1)\n        });\n    }\n    _back = () => {\n        this._set(this.state.index - 1);\n    }\n    _next = () => {\n        this._set(this.state.index + 1);\n    }\n    render() {\n        let current = this.state.slides[this.state.index];\n        let slide = current;\n        let enabled = true;\n        let actions;\n        if (!React.isValidElement(current)){\n            slide = current.slide;\n            actions = current.actions;\n            if (current.preNext){\n                enabled = current.preNext();\n            }\n        }\n        return (\n            <div className=\"Carousel\">\n                <ul className=\"Progress\">\n                    {this._renderProgressSteps()}\n                </ul>\n                {slide}\n                <br />\n                {this.state.index > 0 && <CompoundButton onClick={this._back} secondaryText=\"Return to the previous screen\">Back</CompoundButton>}\n                {this.state.index < this.props.slides.length - 1 && <CompoundButton style={{float: \"right\"}} disabled={!enabled} onClick={this._next} secondaryText=\"Continue to the next screen\">Next</CompoundButton>}\n                {actions}\n            </div>\n        );\n    }\n}\n\nexport default Carousel;\n","import React, { Component } from 'react';\n\nclass Estimate extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            size: props.size || { height: 0, width: 0 },\n            material: props.material || { name: '', costPerArea: 0 },\n            preview: props.preview || ''\n        }\n    }\n    componentDidMount(){\n        if (this.props.fetch){\n            this.setState(this.props.fetch());\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState({ \n            size: nextProps.size || { height: 0, width: 0 },\n            material: nextProps.material || { name: '', costPerArea: 0 },\n            preview: nextProps.preview || ''\n        });  \n    }\n    getArea = () => {\n        return this.state.size.height * this.state.size.width;\n    }\n    getEstimate = () => {\n        return this.getArea() * this.state.material.costPerArea;\n    }\n    render() {\n        return (\n            <div className=\"Estimate\">\n                <div className=\"Container\">\n                    <img alt=\"Preview\" src={this.state.preview} />\n                    <div className=\"Information\">\n                        <b className=\"Name\">{this.state.size.height}'x{this.state.size.width}' {this.state.material.name} print</b>\n                        <span>{this.state.material.name} - ${this.state.material.costPerArea}/in<sup>2</sup></span>\n                        <span>Area - {this.getArea().toLocaleString()}in<sup>2</sup></span>\n                        <span>Total - ${this.getEstimate().toLocaleString()}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Estimate;","import React, { Component } from 'react';\nimport { UploadBox, MaterialSelection, SizeSelection, Carousel, PaypalButton } from './components';\nimport Estimate from '../../components/Estimate';\nimport { withGlobalState } from 'react-globally';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\n\nclass CarouselWrapper extends Component {\n  render(){\n    if (this.props.globalState.options.materials === null || this.props.globalState.options.sizes == null){\n      return (\n        <Spinner \n          size={SpinnerSize.large} \n          label=\"Loading...\" ariaLive=\"assertive\"\n        />\n      );\n    }\n    return (\n      <Carousel \n        slides={[\n          {\n            slide: <UploadBox />,\n            name: 'Upload',\n            icon: 'file-upload',\n            preNext: () => this.props.globalState.image !== null\n          },\n          {\n            slide: <MaterialSelection materials={this.props.globalState.options.materials} />,\n            name: 'Material',\n            icon: 'sticky-note',\n            preNext: () => this.props.globalState.material.index !== null\n          },\n          {\n            slide: <SizeSelection sizes={this.props.globalState.options.sizes} />,\n            name: 'Size',\n            icon: 'ruler-combined',\n            preNext: () => this.props.globalState.size.index !== null\n          },\n          {\n            slide: <>\n              <h1 style={{textAlign: \"center\"}}>Your Order</h1>\n              <Estimate\n                fetch={() => { \n                  return { \n                    material: this.props.globalState.material.item,\n                    size: this.props.globalState.size.item,\n                    preview: this.props.globalState.preview\n                  }\n                }}\n              />\n            </>,\n            name: 'Estimate',\n            icon: 'dollar-sign',\n            actions: <PaypalButton />\n          }\n        ]}\n      />\n    );\n  }\n}\n\nexport default withGlobalState(CarouselWrapper);\n","import OrderForm from './OrderForm';\n\nexport default OrderForm;","import React, { Component } from 'react';\nimport { withGlobalState } from 'react-globally';\nimport remark from 'remark';\nimport remark2react from 'remark-react';\nconst breaks = require('remark-breaks');\n\nclass FAQ extends Component {\n  render() {\n    return (\n      <div className=\"FAQ\">\n        <h1 style={{textAlign: 'center'}}>FAQ</h1>\n        {\n          this.props.globalState.options.content &&\n          remark()\n            .use(breaks)\n            .use(remark2react)\n            .processSync(this.props.globalState.options.content.faq).contents\n        }\n      </div>\n    );\n  }\n}\n\nexport default withGlobalState(FAQ);\n","import FAQ from './FAQ';\n\nexport default FAQ;","import Contact from './Contact';\n\nexport default Contact;","import React, { Component } from 'react';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Button, ButtonType } from 'office-ui-fabric-react/lib/Button';\nimport swal from 'sweetalert';\n\nclass Contact extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: '',\n      orderId: '',\n      issue: ''\n    }\n  }\n  _submit = event => {\n    event.preventDefault();\n    fetch('/api/contact', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state)\n    })\n      .then(response => response.json())\n      .then(json => {\n        if (json.status === 'success'){\n          swal('Success', 'Submitted your information!', 'success');\n          this._clearInputs();\n        } else {\n          swal('Error', json.message, 'error');\n        }\n      });\n  }\n  _clearInputs = () => {\n    this.setState({\n      email: '',\n      orderId: '',\n      issue: ''\n    });\n  }\n  _handleInput = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState(prevState => {\n      return { \n        ...prevState,\n        [name]: value\n      }\n    });\n  }\n  render() {\n    return (\n      <form method=\"POST\" onSubmit={this._submit} className=\"Contact\">\n        <h1 style={{textAlign: 'center'}}>Contact Us</h1>\n        <TextField \n          name=\"email\" \n          type=\"email\"  \n          label=\"E-mail\" \n          value={this.state.email}\n          onChange={this._handleInput}\n          required \n        />\n        <i>\n          <TextField \n            name=\"orderId\" \n            label= \"Order ID (optional)\" \n            value={this.state.orderId}\n            onChange={this._handleInput}\n          />\n        </i>\n        <TextField \n          name=\"issue\" \n          label=\"What was the issue?\" \n          value={this.state.issue}\n          onChange={this._handleInput}\n          multiline \n          autoAdjustHeight \n          required\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          className=\"button\"\n          buttonType={ButtonType.primary} \n          allowDisabledFocus={true}\n          text=\"Submit\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport profile from '../../img/profile.jpg';\nimport './About.css';\nimport { withGlobalState } from 'react-globally';\nimport remark from 'remark';\nimport remark2react from 'remark-react';\n\nconst breaks = require('remark-breaks');\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"About\">\n        <img alt=\"Danielle Petree\" src={profile} height=\"150px\" width=\"150px\" />\n        {\n          this.props.globalState.options.content &&\n          remark()\n            .use(breaks)\n            .use(remark2react)\n            .processSync(this.props.globalState.options.content.about).contents\n        }\n      </div>\n    );\n  }\n}\n\nexport default withGlobalState(About);\n","import About from './About';\n\nexport default About;","import Success from './Success';\nexport default Success;","import React, { Component } from 'react';\nimport Estimate from '../../components/Estimate';\nimport { Spinner } from 'office-ui-fabric-react/lib/Spinner';\n\nclass Success extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            size: null,\n            material: null,\n            preview: null,\n            shippingAddress: null,\n            contact: null\n        }\n    }\n    load = (json) => {\n        this.setState({\n            size: json.size,\n            material: json.material,\n            preview: json.preview,\n            shippingAddress: json.shippingAddress,\n            contact: json.contact\n        });\n    } \n    componentDidMount(){\n        let url = new URL(window.location.href);\n        let paymentId = url.searchParams.get('paymentId');\n        let payerId = url.searchParams.get('PayerID');\n\n        fetch('/api/orders/capture', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                paymentId,\n                payerId\n            })\n        })\n            .then(response => response.json())\n            .then(this.load);\n    }\n    render() {\n        return (\n            <div className=\"Success\">\n                {\n                    this.state.size && \n                    this.state.material && \n                    this.state.preview &&\n                    this.state.contact &&\n                    this.state.shippingAddress ?\n                    <>\n                        <h1>Your order has been successful!</h1>\n                        <div>\n                            <b>Contact</b><br />\n                            <span>{this.state.contact.firstName} {this.state.contact.lastName}</span><br />\n                            <span>{this.state.contact.email}</span><br /><br />\n                            <b>Shipping Address</b><br />\n                            <span>{this.state.shippingAddress.line1}</span><br />\n                            {this.state.shippingAddress.line2 && <><span>{this.state.shippingAddress.line2}</span><br /></>}\n                            <span>{this.state.shippingAddress.city}, {this.state.shippingAddress.country} {this.state.shippingAddress.postal}</span><br />\n                            <span style={{fontSize: \"small\"}}>(if there is an issue with this, please contact us to correct it!)</span>\n                        </div>\n                        <br />\n                        <Estimate\n                            size={this.state.size}\n                            material={this.state.material}\n                            preview={this.state.preview}\n                        />\n                    </> :\n                    <Spinner />\n                }\n            </div>\n        );\n    }\n}\n\nexport default Success;\n","import React, { Component } from 'react';\nimport { Route, Link, NavLink } from 'react-router-dom';\n\nimport './OrdersRouter.css';\nimport logo from '../../img/logo.png';\nimport { OrderForm, FAQ, Contact, About, Success } from '../../pages';\nimport { withGlobalState } from 'react-globally';\n\nclass OrdersRouter extends Component {\n    componentDidMount(){\n        fetch('/api/options')\n            .then(response => response.json())\n            .then(json => {\n                this.props.setGlobalState({\n                    options: json.response\n                });\n            });\n    }\n    render(){\n        return (\n            <div className=\"Application\">\n                <Link className=\"Logo\" to= \"/\" >\n                    <img alt=\"Petree's Prints\" className=\"Image\" src={logo} />\n                    <span className=\"Brand\">Petree's Prints</span>\n                </Link>\n                <nav>\n                    <NavLink activeClassName=\"active\" exact to=\"/\">Order</NavLink>\n                    <NavLink activeClassName=\"active\" exact to=\"/about\">About</NavLink>\n                    <NavLink activeClassName=\"active\" exact to=\"/faq\">FAQ</NavLink>\n                    <NavLink activeClassName=\"active\" exact to=\"/contact\">Contact</NavLink>\n                </nav>\n                <div className=\"Container\">\n                    <Route exact path={this.props.match.path} component={OrderForm}/>\n                    <Route exact path={`${this.props.match.path}about`} component={About}/>\n                    <Route exact path={`${this.props.match.path}faq`} component={FAQ}/>\n                    <Route exact path={`${this.props.match.path}contact`} component={Contact}/>\n                    <Route exact path={`${this.props.match.path}success`} component={Success}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withGlobalState(OrdersRouter);","import OrdersRouter from './OrdersRouter';\n\nexport default OrdersRouter;","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport OrdersRouter from './OrdersRouter/index.js';\nimport { Provider } from 'react-globally';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlus, faFileUpload, faStickyNote, faRulerCombined, faDollarSign } from '@fortawesome/free-solid-svg-icons';\n\nconst initialState = {\n    image: null,\n    material: {\n        index: null,\n        item: null,\n        custom: null\n    },\n    size: {\n        index: null,\n        item: null,\n        custom: null\n    },\n    options: {\n        materials: null,\n        sizes: null,\n        content: null\n    }\n}\n\nlibrary.add(faPlus);\nlibrary.add(faFileUpload);\nlibrary.add(faStickyNote);\nlibrary.add(faRulerCombined);\nlibrary.add(faDollarSign);\n\nconst AppRouter = () => (\n    <Provider globalState={initialState}>\n        <Router>\n            <Route path='/' component={OrdersRouter}/>\n        </Router>\n    </Provider>\n);\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './routes/AppRouter.js';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n"],"sourceRoot":""}